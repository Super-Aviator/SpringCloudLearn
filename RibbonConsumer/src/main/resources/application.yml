server:
  port: 20000

spring:
  application:
    name: microservice-comsumer #服务名

  cloud:
    loadbalancer:
      retry:
        enabled: true #开启Ribbon访问失败的重试功能

management:
  endpoint:
    health:
      show-details: always #显示health断点的详细信息
  endpoints:
    web:
      exposure:
        include: [hystrix.stream,info,health]

eureka:
  client:
    service-url:
      defaultZone: http://49.235.67.7:18080/eureka,http://101.37.172.37:18080/eureka #指定高可用的服务中心地址
    registry-fetch-interval-seconds: 30 # 获取注册中心服务列表的间隔时间

  instance:
    lease-renewal-interval-in-seconds: 30  #定义eureka client发送心跳给eureka server的频率
    lease-expiration-duration-in-seconds: 30 #定义当eureka server在此时间段内接收不到心跳时,认为该实例不可用,默认90秒

feign:
  compression:
    response:
      enabled: true #开启feign响应的压缩功能
    request:
      enabled: true #开启feign请求的压缩功能
      min-request-size: 2048 #当请求大小达到阈值时才进行压缩
  hystrix:
    enabled: true #开启熔断，否则熔断不能触发，非常重要，非常重要，非常重要，非常重要

#在使用 Ribbon+Hystrix时，如果Ribbon超时或者Hystrix超时，都会触发熔断导致服务降级
#Ribbon中的配置在CommonClientConfigKey.class中查看
ribbon:
  ReadTimeout: 4000 #指的请求处理的超时时间
  ConnectTimeout: 4000  #指的是请求链接的超时时间
  MaxAutoRetriesNextServer: 0 #请求超时之后切换服务的次数
  MaxAutoRetries: 0 #同一个实例重试的次数，如果重试后失败，则跟换实例再次重试：请求总次数=(MaxAutoRetries+1)*(MaxAutoRetries+1)
  eureka:
    enabled: true # 开启和关闭Eureka和Ribbon的整合，默认开启。

#根据服务名配置Ribbon属性
MICROSERVICE-SPRINGBOOTLEARN:
  ribbon:
    listOfServer: http://49.235.67.7:18081 #当ribbon.eureka.enabled=false时，使用此配置指定服务对应实例的地址
    ReadTimeout: 4000 #指的请求处理的超时时间
    ConnectTimeout: 4000  #指的是请求链接的超时时间
    MaxAutoRetriesNextServer: 0 #请求超时之后切换服务的次数
    MaxAutoRetries: 0 #同一个实例重试的次数，如果重试后失败，则跟换实例再次重试：请求总次数=(MaxAutoRetries+1)*(MaxAutoRetries+1)

#在使用Feign+Hystrix时，需要配置Ribbon和Hystrix的超时时间，其中断路器的超时时间应该大于Ribbon的超时时间，否则Ribbon重试不会触发
#Hystrix配置可以查看HystrixPropertiesManager.class类
hystrix:
  command:
    #指定Feign方法名的Hystrix配置
    "SpringBootLearnFeignClient#delayWithParam(Long)":
      execution.isolation.thread.timeoutInMilliseconds: 2000
    #默认的Hystrix配置
    default:
      timeout.enabled: false
      fallback.enabled: true
      execution.timeout.enabled: true #关闭熔断功能：控制execution.isolation.thread.timeoutInMilliseconds是否生效
      execution.isolation.thread.timeoutInMilliseconds: 1000 #设置断路器的超时时间默认为1000毫秒